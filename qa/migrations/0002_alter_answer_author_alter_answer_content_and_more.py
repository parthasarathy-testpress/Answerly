# Generated by Django 5.2.7 on 2025-10-14 12:27

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('qa', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='answer',
            name='author',
            field=models.ForeignKey(help_text='Select the user who is posting this answer.', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='answer',
            name='content',
            field=models.TextField(help_text='Write your answer here.'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time when the object was created.'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the object was last updated.'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(help_text='Select the user who is posting this comment.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='content_type',
            field=models.ForeignKey(help_text='The type of object this comment is attached to (Question, Answer, or Comment).', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time when the object was created.'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='If this is a reply, select the parent comment.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='qa.comment'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the object was last updated.'),
        ),
        migrations.AlterField(
            model_name='question',
            name='author',
            field=models.ForeignKey(help_text='Select the user who is posting this question.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='question',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time when the object was created.'),
        ),
        migrations.AlterField(
            model_name='question',
            name='description',
            field=models.TextField(help_text='Provide a detailed explanation of your question.'),
        ),
        migrations.AlterField(
            model_name='question',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='Add relevant tags to categorize and improve discoverability of your question.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='question',
            name='title',
            field=models.CharField(help_text='Enter a concise title for your question (max 255 characters).', max_length=255),
        ),
        migrations.AlterField(
            model_name='question',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the object was last updated.'),
        ),
        migrations.AlterField(
            model_name='vote',
            name='content_type',
            field=models.ForeignKey(help_text='The type of object being voted on (Question, Answer, or Comment).', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='vote',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time when the object was created.'),
        ),
        migrations.AlterField(
            model_name='vote',
            name='object_id',
            field=models.PositiveIntegerField(help_text='The ID of the object being voted on.'),
        ),
        migrations.AlterField(
            model_name='vote',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the object was last updated.'),
        ),
        migrations.AlterField(
            model_name='vote',
            name='user',
            field=models.ForeignKey(help_text='Select the user who is casting this vote.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='vote',
            name='vote_type',
            field=models.SmallIntegerField(choices=[(1, 'Upvote'), (-1, 'Downvote')], help_text="Choose 'Upvote' for +1 or 'Downvote' for -1."),
        ),
    ]
